import openai
import os
import time
from flask import Flask, request, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

# ‚úÖ OpenAI API Key and Assistant ID
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ASSISTANT_ID = os.getenv("ASSISTANT_ID")

# ‚úÖ Check if API keys exist
if not OPENAI_API_KEY:
    raise ValueError("‚ö†Ô∏è Error: OPENAI_API_KEY is not set. Make sure it is properly configured.")

if not ASSISTANT_ID:
    raise ValueError("‚ö†Ô∏è Error: ASSISTANT_ID is not set. Make sure it is properly configured.")

# ‚úÖ Initialize OpenAI Client
client = openai.OpenAI(api_key=OPENAI_API_KEY)

# ‚úÖ Track user requests to limit abuse
user_requests = {}

@app.route("/", methods=["GET"])
def home():
    return "Flask backend is running!", 200

@app.route("/chat", methods=["POST"])
def chat():
    try:
        user_ip = request.remote_addr  

        # ‚úÖ Safely decode request body to avoid Unicode errors
        try:
            raw_data = request.data.decode("utf-8", errors="ignore")
        except Exception as e:
            print(f"‚ùå Decoding Error: {e}")
            return jsonify({"response": "Erro: Falha ao decodificar a mensagem."}), 400
        
        print("üì© Received Request!")
        print("Request Data:", raw_data)

        data = request.get_json(silent=True)

        if not data or "message" not in data:
            return jsonify({"response": "Erro: Nenhuma mensagem fornecida."}), 400

        user_message = data["message"].strip()

        # ‚úÖ Ensure the message is correctly formatted
        if not user_message:
            return jsonify({"response": "Erro: Mensagem vazia recebida."}), 400

        # ‚úÖ Limit users to 50 requests per day
        if user_ip not in user_requests:
            user_requests[user_ip] = 0

        if user_requests[user_ip] >= 50:
            return jsonify({"response": "‚ö†Ô∏è Limite di√°rio de 50 mensagens atingido. Tente novamente amanh√£."}), 429

        user_requests[user_ip] += 1

        # ‚úÖ AI Assistant Instructions for Portuguese + Context Awareness
        instructions = (
            "Voc√™ √© um assistente especializado na dieta carn√≠vora e deve sempre responder em **portugu√™s**. "
            "Assuma que todas as perguntas s√£o sobre a dieta carn√≠vora, mesmo que o usu√°rio n√£o mencione isso. "
            "Se a pergunta for sobre √°lcool, responda: **'Bebidas alco√≥licas n√£o fazem parte da dieta carn√≠vora.'** "
            "Se a pergunta for sobre bebidas, responda: **'Na carn√≠vora restrita, bebe-se apenas √°gua (mineral ou com g√°s). Alguns carn√≠voros tomam ch√°s ou caf√©, mas sucos n√£o fazem parte da dieta carn√≠vora.'** "
            "Se a pergunta for sobre vegetais ou alimentos vegetais, responda: **'A dieta carn√≠vora permite apenas alimentos de origem animal.'** "
            "Responda com frases curtas e diretas (m√°ximo 2 frases). Sempre conecte a pergunta ao contexto da dieta carn√≠vora."
            "Se houver informa√ß√µes nos arquivos carregados, use esses dados para responder antes de recorrer ao conhecimento geral."
            "Nunca mencione que houve erro ao acessar os documentos."
            "Se n√£o puder encontrar uma resposta nos documentos, responda normalmente sem indicar que usar√° conhecimento geral."
            "Evite frases como ""parece que ocorreu um erro"" ou ""vou tentar processar sua solicita√ß√£o de outra forma""."
            "Sempre forne√ßa uma resposta clara e confiante sobre a dieta carn√≠vora."
            "Se uma informa√ß√£o n√£o estiver dispon√≠vel, apenas diga que ""n√£o h√° evid√™ncias suficientes"" em vez de mencionar um erro."
            "N√£o diga ""O que gostaria de saber sobre os arquivos enviados?"" ou qualquer varia√ß√£o dessa frase."
            "Quando o usu√°rio perguntar sobre fibras, consulte o cap√≠tulo ""Chapter 9: Myth II ‚Äî Fiber Is Necessary for a Healthy Gut"" do pdf The Carnivore code e responda de acordo com o que est√° escrito"
            "Quando o usu√°rio perguntar sobre enfermidades, consulte os cap√≠tulos ""Chapter 10: Myth III ‚Äî Red Meat Will Shorten Your Life"" e ""Chapter 11: Myth IV ‚Äî Red Meat Causes the Heart to Explode"" do pdf The Carnivore code e responda de acordo com o que est√° escrito"
        )

        # ‚úÖ Create a new OpenAI Assistant thread
        thread = client.beta.threads.create()
        print(f"‚úÖ Thread created: {thread.id}")

        # ‚úÖ Start AI processing with **improved** instructions
        run = client.beta.threads.runs.create(
            thread_id=thread.id,
            assistant_id=ASSISTANT_ID,
            instructions=f"Pergunta do usu√°rio: {user_message}\n\n{instructions}",
            tool_choice="auto"
        )

        print(f"‚è≥ Run started: {run.id}")

        # ‚úÖ Wait for AI response
        while True:
            run_status = client.beta.threads.runs.retrieve(thread_id=thread.id, run_id=run.id)
            print(f"Checking run status: {run_status.status}")

            if run_status.status == "completed":
                break
            elif run_status.status == "failed":
                return jsonify({"response": "‚ö†Ô∏è Erro ao processar a resposta do assistente."}), 500

            time.sleep(2)

        # ‚úÖ Retrieve AI response
        messages = client.beta.threads.messages.list(thread_id=thread.id)

        if messages.data:
            ai_response = messages.data[0].content[0].text.value.strip()
        else:
            ai_response = "‚ö†Ô∏è Erro: O assistente n√£o retornou resposta v√°lida."

        return jsonify({"response": ai_response})

    except Exception as e:
        return jsonify({"response": f"Erro interno do servidor: {str(e)}"}), 500

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
